{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Phuong\\\\Desktop\\\\work\\\\DevC_week5_Assignment\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport styles from \"./styles\";\nimport renderArticleItem from \"./components/renderArticleItem\";\nimport filterForUniqueArticles from \"./components/filterForUniqueArticles\";\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      articles = _useState4[0],\n      setArticles = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pageNumber = _useState6[0],\n      setPageNumber = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      hasErrored = _useState8[0],\n      setHasApiError = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      lastPageReached = _useState10[0],\n      setLastPageReached = _useState10[1];\n\n  var getNews = function getNews() {\n    var response, jsonData, newArticleList, hasMoreArticles, _newArticleList;\n\n    return _regeneratorRuntime.async(function getNews$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!lastPageReached) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            setLoading(true);\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch(\"https://newsapi.org/v2/top-headlines?country=us&apiKey=986af79db75b4566a558b7ac75d44da6&page=\" + pageNumber));\n\n          case 6:\n            response = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            jsonData = _context.sent;\n            newArticleList = filterForUniqueArticles(articles.concat(jsonData.articles));\n            hasMoreArticles = jsonData.articles.length > 0;\n\n            if (hasMoreArticles) {\n              _newArticleList = filterForUniqueArticles(articles.concat(jsonData.articles));\n              setArticles(_newArticleList);\n              setPageNumber(pageNumber + 1);\n            } else {\n              setLastPageReached(true);\n            }\n\n            setArticles(newArticleList);\n            setPageNumber(pageNumber + 1);\n            setLoading(false);\n            _context.next = 21;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](3);\n            setHasApiError(true);\n\n          case 21:\n            setLoading(false);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 18]], Promise);\n  };\n\n  useEffect(function () {\n    getNews();\n  }, [articles]);\n\n  if (loading) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (hasErrored) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Error =(\"));\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Articles Count:\"), React.createElement(Text, {\n    style: styles.info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, articles.length)), React.createElement(FlatList, {\n    data: articles,\n    renderItem: renderArticleItem,\n    onEndReached: getNews,\n    onEndReachedThreshold: 1,\n    keyExtractor: function keyExtractor(item) {\n      return item.title;\n    },\n    key: function key(item) {\n      return item.title;\n    },\n    ListFooterComponent: lastPageReached ? React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, \"No more articles\") : React.createElement(ActivityIndicator, {\n      size: \"large\",\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Phuong/Desktop/work/DevC_week5_Assignment/App.js"],"names":["React","useState","useEffect","styles","renderArticleItem","filterForUniqueArticles","App","loading","setLoading","articles","setArticles","pageNumber","setPageNumber","hasErrored","setHasApiError","lastPageReached","setLastPageReached","getNews","fetch","response","json","jsonData","newArticleList","concat","hasMoreArticles","length","container","row","label","info","item","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ActivityIndicator, Text, View, FlatList } from \"react-native\";\nimport styles from \"./styles\";\nimport renderArticleItem from \"./components/renderArticleItem\";\nimport filterForUniqueArticles from \"./components/filterForUniqueArticles\";\n\nexport default function App() {\n  const [loading, setLoading] = useState(false);\n  const [articles, setArticles] = useState([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasErrored, setHasApiError] = useState(false);\n  const [lastPageReached, setLastPageReached] = useState(false);\n\n  const getNews = async () => {\n    if (lastPageReached) return;\n    setLoading(true);\n    try {\n      const response = await fetch(\n        `https://newsapi.org/v2/top-headlines?country=us&apiKey=986af79db75b4566a558b7ac75d44da6&page=${pageNumber}`\n      );\n      const jsonData = await response.json();\n      const newArticleList = filterForUniqueArticles(\n        articles.concat(jsonData.articles)\n      );\n\n      const hasMoreArticles = jsonData.articles.length > 0;\n      if (hasMoreArticles) {\n        const newArticleList = filterForUniqueArticles(\n          articles.concat(jsonData.articles)\n        );\n        setArticles(newArticleList);\n        setPageNumber(pageNumber + 1);\n      } else {\n        setLastPageReached(true);\n      }\n\n      setArticles(newArticleList);\n      setPageNumber(pageNumber + 1);\n      setLoading(false);\n    } catch (error) {\n      setHasApiError(true);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getNews();\n  }, [articles]);\n\n  if (loading) {\n    return (\n      <View style={styles.container}>\n        <ActivityIndicator size=\"large\" loading={loading} />\n      </View>\n    );\n  }\n\n  if (hasErrored) {\n    return (\n      <View style={styles.container}>\n        <Text>Error =(</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.row}>\n        <Text style={styles.label}>Articles Count:</Text>\n        <Text style={styles.info}>{articles.length}</Text>\n      </View>\n      <FlatList\n        data={articles}\n        renderItem={renderArticleItem}\n        onEndReached={getNews}\n        onEndReachedThreshold={1}\n        keyExtractor={(item) => item.title}\n        key={(item) => item.title}\n        ListFooterComponent={\n          lastPageReached ? (\n            <Text>No more articles</Text>\n          ) : (\n            <ActivityIndicator size=\"large\" loading={loading} />\n          )\n        }\n      />\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}